name: Docker Build (Single Arch)

on:
  workflow_call:
    inputs:
      title:
        description: 'Title for the image'
        type: string
        default: "redstash"

      dockerfile:
        description: 'Path to Dockerfile'
        type: string
        default: "Dockerfile"

      version_tag:
        description: 'Version tag (e.g., v1.2.3)'
        type: string
        required: true

      source_branch:
        description: 'Source Git branch'
        type: string
        required: true

      platform:
        description: 'Docker build platform (e.g., linux/amd64 or linux/arm64)'
        type: string
        required: true

      arch_suffix:
        description: 'Suffix for architecture tag (e.g., amd64 or arm64)'
        type: string
        required: true

      machine:
        description: 'Runner label (e.g., ubuntu-latest, ubuntu-24.04-arm)'
        type: string
        required: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build ${{ inputs.title }} (${{ inputs.arch_suffix }})
    runs-on: ${{ inputs.machine }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase image name
        id: lowercase
        run: echo "image=ghcr.io/${{ github.repository_owner }}/${{ inputs.title }}" | tr '[:upper:]' '[:lower:]' >> $GITHUB_OUTPUT

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.lowercase.outputs.image }}
          tags: |
            type=raw,value=${{ inputs.version_tag }}-${{ inputs.arch_suffix }}
          labels: |
            org.opencontainers.image.title=${{ inputs.title }}
            org.opencontainers.image.description=Docker image for ${{ inputs.title }} (${{ inputs.arch_suffix }})
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Pull cache (if available)
        continue-on-error: true
        run: docker pull ${{ steps.lowercase.outputs.image }}:${{ inputs.source_branch }}-${{ inputs.arch_suffix }} || true

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          platforms: ${{ inputs.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=gha,mode=max
          cache-from: |
            type=gha
            type=registry,ref=${{ steps.lowercase.outputs.image }}:${{ inputs.source_branch }}-${{ inputs.arch_suffix }}
          build-args: |
            VERSION=${{ inputs.version_tag }}
            COMMIT_INFO=${{ github.sha }}
            BRANCH=${{ inputs.source_branch }}
