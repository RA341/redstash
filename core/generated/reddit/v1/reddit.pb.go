// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: reddit/v1/reddit.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunTaskRequest) Reset() {
	*x = RunTaskRequest{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTaskRequest) ProtoMessage() {}

func (x *RunTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTaskRequest.ProtoReflect.Descriptor instead.
func (*RunTaskRequest) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{0}
}

func (x *RunTaskRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type RunTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunTaskResponse) Reset() {
	*x = RunTaskResponse{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunTaskResponse) ProtoMessage() {}

func (x *RunTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunTaskResponse.ProtoReflect.Descriptor instead.
func (*RunTaskResponse) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{1}
}

type ListAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountRequest) Reset() {
	*x = ListAccountRequest{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountRequest) ProtoMessage() {}

func (x *ListAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountRequest.ProtoReflect.Descriptor instead.
func (*ListAccountRequest) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{2}
}

type FullCredentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountID     uint32                 `protobuf:"varint,1,opt,name=AccountID,proto3" json:"AccountID,omitempty"`
	Account       *AccountDetails        `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	PostBefore    string                 `protobuf:"bytes,3,opt,name=postBefore,proto3" json:"postBefore,omitempty"`
	PostAfter     string                 `protobuf:"bytes,4,opt,name=postAfter,proto3" json:"postAfter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullCredentials) Reset() {
	*x = FullCredentials{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullCredentials) ProtoMessage() {}

func (x *FullCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullCredentials.ProtoReflect.Descriptor instead.
func (*FullCredentials) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{3}
}

func (x *FullCredentials) GetAccountID() uint32 {
	if x != nil {
		return x.AccountID
	}
	return 0
}

func (x *FullCredentials) GetAccount() *AccountDetails {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *FullCredentials) GetPostBefore() string {
	if x != nil {
		return x.PostBefore
	}
	return ""
}

func (x *FullCredentials) GetPostAfter() string {
	if x != nil {
		return x.PostAfter
	}
	return ""
}

type ListAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cred          []*FullCredentials     `protobuf:"bytes,1,rep,name=cred,proto3" json:"cred,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountResponse) Reset() {
	*x = ListAccountResponse{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountResponse) ProtoMessage() {}

func (x *ListAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountResponse.ProtoReflect.Descriptor instead.
func (*ListAccountResponse) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{4}
}

func (x *ListAccountResponse) GetCred() []*FullCredentials {
	if x != nil {
		return x.Cred
	}
	return nil
}

type DeleteAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     uint32                 `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccountRequest) Reset() {
	*x = DeleteAccountRequest{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountRequest) ProtoMessage() {}

func (x *DeleteAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountRequest) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteAccountRequest) GetAccountId() uint32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type DeleteAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccountResponse) Reset() {
	*x = DeleteAccountResponse{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountResponse) ProtoMessage() {}

func (x *DeleteAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountResponse.ProtoReflect.Descriptor instead.
func (*DeleteAccountResponse) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{6}
}

type AddAccountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       *AccountDetails        `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccountRequest) Reset() {
	*x = AddAccountRequest{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountRequest) ProtoMessage() {}

func (x *AddAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountRequest.ProtoReflect.Descriptor instead.
func (*AddAccountRequest) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{7}
}

func (x *AddAccountRequest) GetDetails() *AccountDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type AccountDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientID      string                 `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	ClientSecret  string                 `protobuf:"bytes,2,opt,name=ClientSecret,proto3" json:"ClientSecret,omitempty"`
	Username      string                 `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
	Password      string                 `protobuf:"bytes,4,opt,name=Password,proto3" json:"Password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountDetails) Reset() {
	*x = AccountDetails{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDetails) ProtoMessage() {}

func (x *AccountDetails) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDetails.ProtoReflect.Descriptor instead.
func (*AccountDetails) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{8}
}

func (x *AccountDetails) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *AccountDetails) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *AccountDetails) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccountDetails) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AddAccountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccountResponse) Reset() {
	*x = AddAccountResponse{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountResponse) ProtoMessage() {}

func (x *AddAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountResponse.ProtoReflect.Descriptor instead.
func (*AddAccountResponse) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{9}
}

type TestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestRequest) Reset() {
	*x = TestRequest{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRequest) ProtoMessage() {}

func (x *TestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRequest.ProtoReflect.Descriptor instead.
func (*TestRequest) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{10}
}

type TestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestResponse) Reset() {
	*x = TestResponse{}
	mi := &file_reddit_v1_reddit_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResponse) ProtoMessage() {}

func (x *TestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_reddit_v1_reddit_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResponse.ProtoReflect.Descriptor instead.
func (*TestResponse) Descriptor() ([]byte, []int) {
	return file_reddit_v1_reddit_proto_rawDescGZIP(), []int{11}
}

var File_reddit_v1_reddit_proto protoreflect.FileDescriptor

const file_reddit_v1_reddit_proto_rawDesc = "" +
	"\n" +
	"\x16reddit/v1/reddit.proto\x12\treddit.v1\",\n" +
	"\x0eRunTaskRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"\x11\n" +
	"\x0fRunTaskResponse\"\x14\n" +
	"\x12ListAccountRequest\"\xa2\x01\n" +
	"\x0fFullCredentials\x12\x1c\n" +
	"\tAccountID\x18\x01 \x01(\rR\tAccountID\x123\n" +
	"\aaccount\x18\x02 \x01(\v2\x19.reddit.v1.AccountDetailsR\aaccount\x12\x1e\n" +
	"\n" +
	"postBefore\x18\x03 \x01(\tR\n" +
	"postBefore\x12\x1c\n" +
	"\tpostAfter\x18\x04 \x01(\tR\tpostAfter\"E\n" +
	"\x13ListAccountResponse\x12.\n" +
	"\x04cred\x18\x01 \x03(\v2\x1a.reddit.v1.FullCredentialsR\x04cred\"4\n" +
	"\x14DeleteAccountRequest\x12\x1c\n" +
	"\taccountId\x18\x01 \x01(\rR\taccountId\"\x17\n" +
	"\x15DeleteAccountResponse\"H\n" +
	"\x11AddAccountRequest\x123\n" +
	"\adetails\x18\x01 \x01(\v2\x19.reddit.v1.AccountDetailsR\adetails\"\x88\x01\n" +
	"\x0eAccountDetails\x12\x1a\n" +
	"\bClientID\x18\x01 \x01(\tR\bClientID\x12\"\n" +
	"\fClientSecret\x18\x02 \x01(\tR\fClientSecret\x12\x1a\n" +
	"\bUsername\x18\x03 \x01(\tR\bUsername\x12\x1a\n" +
	"\bPassword\x18\x04 \x01(\tR\bPassword\"\x14\n" +
	"\x12AddAccountResponse\"\r\n" +
	"\vTestRequest\"\x0e\n" +
	"\fTestResponse2\xc6\x02\n" +
	"\rRedditService\x12K\n" +
	"\n" +
	"AddAccount\x12\x1c.reddit.v1.AddAccountRequest\x1a\x1d.reddit.v1.AddAccountResponse\"\x00\x12T\n" +
	"\rDeleteAccount\x12\x1f.reddit.v1.DeleteAccountRequest\x1a .reddit.v1.DeleteAccountResponse\"\x00\x12N\n" +
	"\vListAccount\x12\x1d.reddit.v1.ListAccountRequest\x1a\x1e.reddit.v1.ListAccountResponse\"\x00\x12B\n" +
	"\aRunTask\x12\x19.reddit.v1.RunTaskRequest\x1a\x1a.reddit.v1.RunTaskResponse\"\x00B\x90\x01\n" +
	"\rcom.reddit.v1B\vRedditProtoP\x01Z-github.com/RA341/redstash/generated/reddit/v1\xa2\x02\x03RXX\xaa\x02\tReddit.V1\xca\x02\tReddit\\V1\xe2\x02\x15Reddit\\V1\\GPBMetadata\xea\x02\n" +
	"Reddit::V1b\x06proto3"

var (
	file_reddit_v1_reddit_proto_rawDescOnce sync.Once
	file_reddit_v1_reddit_proto_rawDescData []byte
)

func file_reddit_v1_reddit_proto_rawDescGZIP() []byte {
	file_reddit_v1_reddit_proto_rawDescOnce.Do(func() {
		file_reddit_v1_reddit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_reddit_v1_reddit_proto_rawDesc), len(file_reddit_v1_reddit_proto_rawDesc)))
	})
	return file_reddit_v1_reddit_proto_rawDescData
}

var file_reddit_v1_reddit_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_reddit_v1_reddit_proto_goTypes = []any{
	(*RunTaskRequest)(nil),        // 0: reddit.v1.RunTaskRequest
	(*RunTaskResponse)(nil),       // 1: reddit.v1.RunTaskResponse
	(*ListAccountRequest)(nil),    // 2: reddit.v1.ListAccountRequest
	(*FullCredentials)(nil),       // 3: reddit.v1.FullCredentials
	(*ListAccountResponse)(nil),   // 4: reddit.v1.ListAccountResponse
	(*DeleteAccountRequest)(nil),  // 5: reddit.v1.DeleteAccountRequest
	(*DeleteAccountResponse)(nil), // 6: reddit.v1.DeleteAccountResponse
	(*AddAccountRequest)(nil),     // 7: reddit.v1.AddAccountRequest
	(*AccountDetails)(nil),        // 8: reddit.v1.AccountDetails
	(*AddAccountResponse)(nil),    // 9: reddit.v1.AddAccountResponse
	(*TestRequest)(nil),           // 10: reddit.v1.TestRequest
	(*TestResponse)(nil),          // 11: reddit.v1.TestResponse
}
var file_reddit_v1_reddit_proto_depIdxs = []int32{
	8, // 0: reddit.v1.FullCredentials.account:type_name -> reddit.v1.AccountDetails
	3, // 1: reddit.v1.ListAccountResponse.cred:type_name -> reddit.v1.FullCredentials
	8, // 2: reddit.v1.AddAccountRequest.details:type_name -> reddit.v1.AccountDetails
	7, // 3: reddit.v1.RedditService.AddAccount:input_type -> reddit.v1.AddAccountRequest
	5, // 4: reddit.v1.RedditService.DeleteAccount:input_type -> reddit.v1.DeleteAccountRequest
	2, // 5: reddit.v1.RedditService.ListAccount:input_type -> reddit.v1.ListAccountRequest
	0, // 6: reddit.v1.RedditService.RunTask:input_type -> reddit.v1.RunTaskRequest
	9, // 7: reddit.v1.RedditService.AddAccount:output_type -> reddit.v1.AddAccountResponse
	6, // 8: reddit.v1.RedditService.DeleteAccount:output_type -> reddit.v1.DeleteAccountResponse
	4, // 9: reddit.v1.RedditService.ListAccount:output_type -> reddit.v1.ListAccountResponse
	1, // 10: reddit.v1.RedditService.RunTask:output_type -> reddit.v1.RunTaskResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_reddit_v1_reddit_proto_init() }
func file_reddit_v1_reddit_proto_init() {
	if File_reddit_v1_reddit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_reddit_v1_reddit_proto_rawDesc), len(file_reddit_v1_reddit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reddit_v1_reddit_proto_goTypes,
		DependencyIndexes: file_reddit_v1_reddit_proto_depIdxs,
		MessageInfos:      file_reddit_v1_reddit_proto_msgTypes,
	}.Build()
	File_reddit_v1_reddit_proto = out.File
	file_reddit_v1_reddit_proto_goTypes = nil
	file_reddit_v1_reddit_proto_depIdxs = nil
}
